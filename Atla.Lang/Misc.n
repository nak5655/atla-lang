using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Atla.Lang
{
    public module ListMiscExtensions {
        public joinToString[T](this values: IEnumerable[T], sep: string): string {
            def sb = StringBuilder();
            when (values.Count() > 0) {
                _ = sb.Append(values.First().ToString());
                foreach (value in values.Skip(1)) {
                    _ = sb.Append(sep).Append(value.ToString());
                }
            }
            sb.ToString()
        }
        
        public flatten[A](this vs: IEnumerable[IEnumerable[A]]): IEnumerable[A] {
            vs.SelectMany(v => v)
        }
    }
    
    public module ObjectMiscExtensions {
        public let[A](this a: A, f: A -> Void): A { _ = f(a); a }
    }
}
