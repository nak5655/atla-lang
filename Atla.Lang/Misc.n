using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Atla.Lang
{
    public class Misc
    {
        public static updateModule(asm: Hir.Assembly, name: string, code: string): Hir.Module {
            def lexer = Atla.Lang.Parser.Lexer();
            def tokens = lexer.tokenize(code).getResult().Value;
            def parser = Atla.Lang.Parser.Parser();
            def ast = parser.mod.parse(Atla.Lang.Parser.TokenInput(tokens, 0)).getResult().Value;
            def hir = Atla.Lang.Ast.Trans().trans(asm.scope, ast, name);
            Atla.Lang.Hir.Typing().typing(hir);
            
            asm.modules[name] = hir;
            
            hir
        }
        
        public static compile(asm: Hir.Assembly): Mir.Assembly {
            Atla.Lang.Hir.Trans().trans(asm).getResult().Value
        }
        
        public static compile(asm: Mir.Assembly): Cir.Assembly {
            Atla.Lang.Mir.Trans().trans(asm).getResult().Value
        }
    }
    
    public module ListMiscExtensions {
        public joinToString[T](this values: IEnumerable[T], sep: string): string {
            def sb = StringBuilder();
            when (values.Count() > 0) {
                _ = sb.Append(values.First().ToString());
                foreach (value in values.Skip(1)) {
                    _ = sb.Append(sep).Append(value.ToString());
                }
            }
            sb.ToString()
        }
        
        public flatten[A](this vs: IEnumerable[IEnumerable[A]]): IEnumerable[A] {
            vs.SelectMany(v => v)
        }
    }
}
